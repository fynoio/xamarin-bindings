//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace IO.Fyno.Pushlibrary {

	// Metadata.xml XPath class reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush']"
	[global::Android.Runtime.Register ("io/fyno/pushlibrary/FynoPush", DoNotGenerateAcw=true)]
	public sealed partial class FynoPush : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush.WhenMappings']"
		[global::Android.Runtime.Register ("io/fyno/pushlibrary/FynoPush$WhenMappings", DoNotGenerateAcw=true)]
		public sealed partial class WhenMappings : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("io/fyno/pushlibrary/FynoPush$WhenMappings", typeof (WhenMappings));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal WhenMappings (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("io/fyno/pushlibrary/FynoPush", typeof (FynoPush));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal FynoPush (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush']/constructor[@name='FynoPush' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe FynoPush () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush']/method[@name='registerMiPush' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("registerMiPush", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public unsafe void RegisterMiPush (string App_Id, string App_Key, string Integration_Id)
		{
			const string __id = "registerMiPush.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_App_Id = JNIEnv.NewString ((string)App_Id);
			IntPtr native_App_Key = JNIEnv.NewString ((string)App_Key);
			IntPtr native_Integration_Id = JNIEnv.NewString ((string)Integration_Id);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_App_Id);
				__args [1] = new JniArgumentValue (native_App_Key);
				__args [2] = new JniArgumentValue (native_Integration_Id);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_App_Id);
				JNIEnv.DeleteLocalRef (native_App_Key);
				JNIEnv.DeleteLocalRef (native_Integration_Id);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush']/method[@name='registerPush' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.fyno.pushlibrary.models.PushRegion'] and parameter[4][@type='java.lang.String']]"
		[Register ("registerPush", "(Ljava/lang/String;Ljava/lang/String;Lio/fyno/pushlibrary/models/PushRegion;Ljava/lang/String;)V", "")]
		public unsafe void RegisterPush (string App_Id, string App_Key, global::IO.Fyno.Pushlibrary.Models.PushRegion pushRegion, string Fyno_Integration_Id)
		{
			const string __id = "registerPush.(Ljava/lang/String;Ljava/lang/String;Lio/fyno/pushlibrary/models/PushRegion;Ljava/lang/String;)V";
			IntPtr native_App_Id = JNIEnv.NewString ((string)App_Id);
			IntPtr native_App_Key = JNIEnv.NewString ((string)App_Key);
			IntPtr native_Fyno_Integration_Id = JNIEnv.NewString ((string)Fyno_Integration_Id);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_App_Id);
				__args [1] = new JniArgumentValue (native_App_Key);
				__args [2] = new JniArgumentValue ((pushRegion == null) ? IntPtr.Zero : ((global::Java.Lang.Object) pushRegion).Handle);
				__args [3] = new JniArgumentValue (native_Fyno_Integration_Id);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_App_Id);
				JNIEnv.DeleteLocalRef (native_App_Key);
				JNIEnv.DeleteLocalRef (native_Fyno_Integration_Id);
				global::System.GC.KeepAlive (pushRegion);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush']/method[@name='setMiRegion' and count(parameter)=1 and parameter[1][@type='io.fyno.pushlibrary.models.PushRegion']]"
		[Register ("setMiRegion", "(Lio/fyno/pushlibrary/models/PushRegion;)V", "")]
		public unsafe void SetMiRegion (global::IO.Fyno.Pushlibrary.Models.PushRegion region)
		{
			const string __id = "setMiRegion.(Lio/fyno/pushlibrary/models/PushRegion;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((region == null) ? IntPtr.Zero : ((global::Java.Lang.Object) region).Handle);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (region);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.pushlibrary']/class[@name='FynoPush']/method[@name='showPermissionDialog' and count(parameter)=0]"
		[Register ("showPermissionDialog", "()V", "")]
		public unsafe void ShowPermissionDialog ()
		{
			const string __id = "showPermissionDialog.()V";
			try {
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}
