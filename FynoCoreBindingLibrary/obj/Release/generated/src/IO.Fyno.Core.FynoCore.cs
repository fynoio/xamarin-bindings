//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace IO.Fyno.Core {

	// Metadata.xml XPath class reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore']"
	[global::Android.Runtime.Register ("io/fyno/core/FynoCore", DoNotGenerateAcw=true)]
	public sealed partial class FynoCore : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore']/field[@name='appContext']"
		[Register ("appContext")]
		public static global::Android.Content.Context AppContext {
			get {
				const string __id = "appContext.Landroid/content/Context;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Android.Content.Context> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "appContext.Landroid/content/Context;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore']/field[@name='TAG']"
		[Register ("TAG")]
		public const string Tag = (string) "FynoSDK";

		// Metadata.xml XPath class reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']"
		[global::Android.Runtime.Register ("io/fyno/core/FynoCore$Companion", DoNotGenerateAcw=true)]
		public sealed partial class Companion : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("io/fyno/core/FynoCore$Companion", typeof (Companion));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Companion (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			public unsafe global::Android.Content.Context AppContext {
				// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='getAppContext' and count(parameter)=0]"
				[Register ("getAppContext", "()Landroid/content/Context;", "")]
				get {
					const string __id = "getAppContext.()Landroid/content/Context;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.Content.Context> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
				// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='setAppContext' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
				[Register ("setAppContext", "(Landroid/content/Context;)V", "")]
				set {
					const string __id = "setAppContext.(Landroid/content/Context;)V";
					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
						_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
					} finally {
						global::System.GC.KeepAlive (value);
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='areNotificationPermissionsEnabled' and count(parameter)=0]"
			[Register ("areNotificationPermissionsEnabled", "()Z", "")]
			public unsafe bool AreNotificationPermissionsEnabled ()
			{
				const string __id = "areNotificationPermissionsEnabled.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='getString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("getString", "(Ljava/lang/String;)Ljava/lang/String;", "")]
			public unsafe string GetString (string key)
			{
				const string __id = "getString.(Ljava/lang/String;)Ljava/lang/String;";
				IntPtr native_key = JNIEnv.NewString ((string)key);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_key);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_key);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='identify' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean']]"
			[Register ("identify", "(Ljava/lang/String;Ljava/lang/String;Z)V", "")]
			public unsafe void Identify (string uniqueId, string name, bool update)
			{
				const string __id = "identify.(Ljava/lang/String;Ljava/lang/String;Z)V";
				IntPtr native_uniqueId = JNIEnv.NewString ((string)uniqueId);
				IntPtr native_name = JNIEnv.NewString ((string)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue (native_uniqueId);
					__args [1] = new JniArgumentValue (native_name);
					__args [2] = new JniArgumentValue (update);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_uniqueId);
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='initialize' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
			[Register ("initialize", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe void Initialize (global::Android.Content.Context context, string WSId, string token, string version)
			{
				const string __id = "initialize.(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
				IntPtr native_WSId = JNIEnv.NewString ((string)WSId);
				IntPtr native_token = JNIEnv.NewString ((string)token);
				IntPtr native_version = JNIEnv.NewString ((string)version);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
					__args [1] = new JniArgumentValue (native_WSId);
					__args [2] = new JniArgumentValue (native_token);
					__args [3] = new JniArgumentValue (native_version);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_WSId);
					JNIEnv.DeleteLocalRef (native_token);
					JNIEnv.DeleteLocalRef (native_version);
					global::System.GC.KeepAlive (context);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='mergeProfile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("mergeProfile", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe void MergeProfile (string oldDistinctId, string newDistinctId)
			{
				const string __id = "mergeProfile.(Ljava/lang/String;Ljava/lang/String;)V";
				IntPtr native_oldDistinctId = JNIEnv.NewString ((string)oldDistinctId);
				IntPtr native_newDistinctId = JNIEnv.NewString ((string)newDistinctId);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_oldDistinctId);
					__args [1] = new JniArgumentValue (native_newDistinctId);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_oldDistinctId);
					JNIEnv.DeleteLocalRef (native_newDistinctId);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='resetConfig' and count(parameter)=0]"
			[Register ("resetConfig", "()V", "")]
			public unsafe void ResetConfig ()
			{
				const string __id = "resetConfig.()V";
				try {
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='resetUser' and count(parameter)=0]"
			[Register ("resetUser", "()V", "")]
			public unsafe void ResetUser ()
			{
				const string __id = "resetUser.()V";
				try {
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='saveConfig' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
			[Register ("saveConfig", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe void SaveConfig (string wsId, string apiKey, string fcmIntegration, string miIntegration)
			{
				const string __id = "saveConfig.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
				IntPtr native_wsId = JNIEnv.NewString ((string)wsId);
				IntPtr native_apiKey = JNIEnv.NewString ((string)apiKey);
				IntPtr native_fcmIntegration = JNIEnv.NewString ((string)fcmIntegration);
				IntPtr native_miIntegration = JNIEnv.NewString ((string)miIntegration);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue (native_wsId);
					__args [1] = new JniArgumentValue (native_apiKey);
					__args [2] = new JniArgumentValue (native_fcmIntegration);
					__args [3] = new JniArgumentValue (native_miIntegration);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_wsId);
					JNIEnv.DeleteLocalRef (native_apiKey);
					JNIEnv.DeleteLocalRef (native_fcmIntegration);
					JNIEnv.DeleteLocalRef (native_miIntegration);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='setLogLevel' and count(parameter)=1 and parameter[1][@type='io.fyno.core.utils.LogLevel']]"
			[Register ("setLogLevel", "(Lio/fyno/core/utils/LogLevel;)V", "")]
			public unsafe void SetLogLevel (global::IO.Fyno.Core.Utils.LogLevel level)
			{
				const string __id = "setLogLevel.(Lio/fyno/core/utils/LogLevel;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((level == null) ? IntPtr.Zero : ((global::Java.Lang.Object) level).Handle);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (level);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore.Companion']/method[@name='testNetwork' and count(parameter)=0]"
			[Register ("testNetwork", "()V", "")]
			public unsafe void TestNetwork ()
			{
				const string __id = "testNetwork.()V";
				try {
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("io/fyno/core/FynoCore", typeof (FynoCore));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal FynoCore (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='io.fyno.core']/class[@name='FynoCore']/constructor[@name='FynoCore' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe FynoCore () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

	}
}
