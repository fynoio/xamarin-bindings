//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace IO.Fyno.Kotlin_sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']"
	[global::Android.Runtime.Register ("io/fyno/kotlin_sdk/FynoJava", DoNotGenerateAcw=true)]
	public partial class FynoJava : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("io/fyno/kotlin_sdk/FynoJava", typeof (FynoJava));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FynoJava (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']/constructor[@name='FynoJava' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe FynoJava () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']/method[@name='identify' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("identify", "(Ljava/lang/String;)V", "")]
		public static unsafe void Identify (string uniqueId)
		{
			const string __id = "identify.(Ljava/lang/String;)V";
			IntPtr native_uniqueId = JNIEnv.NewString ((string)uniqueId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_uniqueId);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_uniqueId);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']/method[@name='initialize' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("initialize", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void Initialize (global::Android.Content.Context context, string workspaceId, string token, string userId)
		{
			const string __id = "initialize.(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_workspaceId = JNIEnv.NewString ((string)workspaceId);
			IntPtr native_token = JNIEnv.NewString ((string)token);
			IntPtr native_userId = JNIEnv.NewString ((string)userId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (native_workspaceId);
				__args [2] = new JniArgumentValue (native_token);
				__args [3] = new JniArgumentValue (native_userId);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_workspaceId);
				JNIEnv.DeleteLocalRef (native_token);
				JNIEnv.DeleteLocalRef (native_userId);
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']/method[@name='resetConfig' and count(parameter)=0]"
		[Register ("resetConfig", "()V", "")]
		public static unsafe void ResetConfig ()
		{
			const string __id = "resetConfig.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']/method[@name='resetUser' and count(parameter)=0]"
		[Register ("resetUser", "()V", "")]
		public static unsafe void ResetUser ()
		{
			const string __id = "resetUser.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='io.fyno.kotlin_sdk']/class[@name='FynoJava']/method[@name='saveConfig' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("saveConfig", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void SaveConfig (string wsId, string apiKey, string fcmIntegration, string miIntegration)
		{
			const string __id = "saveConfig.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_wsId = JNIEnv.NewString ((string)wsId);
			IntPtr native_apiKey = JNIEnv.NewString ((string)apiKey);
			IntPtr native_fcmIntegration = JNIEnv.NewString ((string)fcmIntegration);
			IntPtr native_miIntegration = JNIEnv.NewString ((string)miIntegration);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_wsId);
				__args [1] = new JniArgumentValue (native_apiKey);
				__args [2] = new JniArgumentValue (native_fcmIntegration);
				__args [3] = new JniArgumentValue (native_miIntegration);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_wsId);
				JNIEnv.DeleteLocalRef (native_apiKey);
				JNIEnv.DeleteLocalRef (native_fcmIntegration);
				JNIEnv.DeleteLocalRef (native_miIntegration);
			}
		}

	}
}
